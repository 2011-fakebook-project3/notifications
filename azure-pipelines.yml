# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
#trigger on master pull
trigger:
  branches:
    include:
    - main
pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    jobs:
    - job: build
      variables:
        buildConfiguration: 'Release'
        directory: 'FakebookNotifications/FakebookNotifications.WebApi'
      steps:
      - task: UseDotNet@2
        displayName: dotnet sdk 5.x
        inputs:
          packageType: 'sdk'
          version: '5.x'
          installationPath: $(Agent.ToolsDirectory)/dotnet
          workingDirectory: '$(directory)'
      # build and publish app
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: dotnet build
        workingDirectory: '$(directory)/'
      - script: dotnet publish --configuration $(buildConfiguration) --output publish
        displayName: dotnet publish
        workingDirectory: '$(directory)'
      # publish artifact for eventual release
      - publish: '$(directory)/publish'
        artifact: app

  - stage: SonarCloud
    jobs:
    - job: build
      pool:
        vmImage: ubuntu-latest
      variables:
        sdkVersion: 3.1.x
        buildConfiguration: 'Release'
        directory: 'FakebookNotifications/FakebookNotifications.WebApi'

      steps:
      # use dotnet 2 for sonar compatibility
      - task: 'UseDotNet@2'
        displayName: 'dotnet sdk 2.x'
        inputs:
          packageType: 'sdk'
          version: '2.x'
      # use the Sonar Cloud Token from the available connections
      - task: 'SonarCloudPrepare@1'
        inputs:
          SonarCloud: 'SonarCloud Token'
          organization: '2011-fakebook-project3'
          scannerMode: 'MSBuild'
          projectKey: '2011-fakebook-project3_notifications'
          extraProperties: |
                'sonar.exclusions=**/lib/**'
                'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml'
      # switch to dotnet 5
      - task: 'UseDotNet@2'
        displayName: 'Use .NET 5 SDK'
        inputs:
          packageType: 'sdk'
          version: '5.x'
          installationPath: '$(Agent.ToolsDirectory)/dotnet'
          workingDirectory: '$(directory)'
      # add working directory
      - task: 'DotNetCoreCLI@2' 
        displayName: 'dotnet test'
        inputs:
          command: 'test'
          arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
          publishTestResults: true
          workingDirectory: 'FakebookNotifications'
      - task: 'SonarCloudAnalyze@1'
        displayName: 'sonar run analysis'
      - task: 'SonarCloudPublish@1'
        displayName: 'sonar analysis publish'
        inputs:
          pollingTimeoutSec: '300'
  